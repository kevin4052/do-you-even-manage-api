{"version":3,"sources":["services/AuthService.js","components/Home/index.js","components/Authentication/Signup/index.js","components/ProtectedRoute/index.js","components/Profile/index.js","components/Authentication/Login/index.js","components/LandingPage/index.js","services/TeamService.js","services/TaskService.js","components/TeamForm/index.js","components/SideNav/index.js","services/ProjectService.js","components/TaskDetails.js/index.js","components/TaskForm/index.js","components/ProjectDetails/index.js","components/MyTasks/MyTaskTable.js","components/MyTasks/index.js","components/MemberCard/index.js","components/TeamForm/EditForm.js","components/TeamDetails/TeamProjects.js","components/TeamDetails/index.js","components/Loading/index.js","App.js","reportWebVitals.js","index.js"],"names":["baseURL","process","REACT_APP_SERVER_POINT","service","axios","create","withCredentials","AUTH_SERVICE","signup","userData","post","login","logout","getAuthenticatedUser","get","getAllUsers","updateCurrentUser","Home","props","componentDidMount","a","then","responseFromServer","user","data","onUserChange","catch","err","console","log","state","userTeams","userProjects","userTasks","className","this","currentUser","firstName","lastName","toUpperCase","Component","Signup","handleInputChange","event","target","name","value","setState","handleFormSubmission","preventDefault","email","password","history","push","response","message","profileImg","onSubmit","type","placeholder","username","onChange","ProtectedRoute","authorized","redirect","to","Profile","editProfile","editForm","handleChange","handleFormSubmit","deleteUser","teams","tasks","src","alt","onClick","icon","faEdit","faTimesCircle","length","confirmDeleteUser","Login","loggedInUser","Landing","updateUser","displayLoginModal","displaySignupModal","TEAM_SERVICE","createTeam","teamData","getAllTeams","getUserTeams","getOneTeam","deleteTeam","updateTeam","teamId","removeTeamMember","TASK_SERVICE","createTask","taskData","getAllTasks","getAllUserTasks","getProjectTasks","projectId","getOneTask","taskId","deleteTask","updateTask","TeamForm","users","usersList","owner","memberIDs","members","map","member","_id","modalClasslist","parentNode","classList","selector","childNodes","teamFromServer","updateUserTeams","remove","selectedIndex","addMember","selectedID","selectedUser","filter","cancelForm","htmlFor","id","SideNav","Promise","all","updateUserTasks","logoutAndLiftUserState","itemIsActive","listClassName","children","contains","add","createTeamForm","faCaretDown","exact","activeClassName","faUser","faSignOutAlt","faTh","faPlusCircle","team","faTasks","PROJECT_SERVICE","createProject","projectData","getAllProjects","getTeamProjects","getOneProject","deleteProject","updateProject","TaskDetails","task","title","description","dueDate","assigned","checklist","isComplete","date","Date","convertedDate","getFullYear","getMonth","getDate","handleCheckBoxInput","index","attributes","assignedID","selectedStatus","status","addItem","input","checklistItem","checkItem","trim","teamMembers","currentProject","item","defaultChecked","TaskForm","taskProject","project","projectFromServer","addNewTask","ProjectDetails","match","params","toDoTasks","inProgressTasks","completedTasks","displayTaskForm","displayTask","convertDate","toLocaleDateString","year","month","day","taskName","innerText","taskToDelete","MyTaskTable","toggleForm","newTask","sortByDate","selectedTask","sortedTasks","ascendingDate","faSortUp","faSortDown","MyTasks","forEach","sort","b","MemberCard","EditForm","projects","componentDidUpdate","projectIDs","newTeamData","TeamEditForm","removeMember","memberToRemove","nodeValue","editState","TeamProjects","newProject","faEye","TeamDetails","updateTeamDetails","style","background","Loading","faSpinner","App","getCurrentUser","loading","updateCurrentProject","currentTeam","currentTeamProjects","currentProjectTasks","path","render","updateCurrentTeam","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05bc6f1a.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst baseURL = process.env.REACT_APP_SERVER_POINT;\n\nconst service = axios.create({\n  baseURL,\n  withCredentials: true\n});\n\nconst AUTH_SERVICE = {\n  signup(userData) {\n    return service.post('/api/signup', userData);\n  },\n  login(userData) {\n    return service.post('/api/login', userData);\n  },\n  logout() {\n    return service.post('/api/logout', {});\n  },\n  getAuthenticatedUser() {\n    return service.get('/api/isLoggedIn');\n  },\n  getAllUsers() {\n    return service.get('/api/get-users')\n  },\n  updateCurrentUser(userData) {\n    return service.post(`/api/update-user`, userData)\n  }\n};\n\nexport default AUTH_SERVICE;","import React, { Component } from 'react';\nimport AUTH_SERVICE from '../../services/AuthService';\n\n// import TEAM_SERVICE from '../../services/TeamService';\n// import PROJECT_SERVICE from '../../services/ProjectService';\n// import TASK_SERVICE from '../../services/TaskService';\n\nexport default class Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userTeams: [],\n            userProjects: [],\n            userTasks: []\n        }\n    }\n\n    componentDidMount = async () => {\n        AUTH_SERVICE\n            .getAuthenticatedUser()\n            .then(responseFromServer => {\n                const { user } = responseFromServer.data;\n                this.props.onUserChange(user);\n            })\n            .catch(err => console.log({ err }));\n    }\n\n    render() {\n        return (\n            <div className='main-panel'>\n                <div>\n                    <h4>Welcome {this.props.currentUser?.firstName} {this.props.currentUser.lastName[0].toUpperCase()}</h4>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport AUTH_SERVICE from '../../../services/AuthService';\nimport './style.css';\n\nexport default class Signup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            firstName: '',\n            lastName: '',\n            email: '',\n            password: '',\n            profileImg: null,\n            message: null\n        }\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n    handleFormSubmission = event => {\n        event.preventDefault();\n        const { firstName, lastName, email, password } = this.state;\n        console.log({ firstName, lastName, email, password })\n\n        AUTH_SERVICE\n            .signup({ firstName, lastName, email, password })\n            .then(responseFromServer => {\n                const { user } = responseFromServer.data;\n                // lift user up to App.js\n                this.props.onUserChange(user);\n                this.props.history.push('/home'); // redirect back to the home page\n            })\n            .catch(err => {\n                if (err.response && err.response.data) {\n                    return this.setState({ message: err.response.data.message });\n                }\n            });\n    }\n\n    render() {\n        return (\n            <section className=' '>\n                <form className='form' onSubmit={this.handleFormSubmission}>\n                    <h3>Signup</h3>\n                    \n                    <input\n                        name='firstName'\n                        type='text'\n                        placeholder='First name'\n                        value={this.state.username}\n                        onChange={this.handleInputChange}\n                    />\n                    <br/>\n                    <input\n                        name='lastName'\n                        type='text'\n                        placeholder='Last name'\n                        value={this.state.username}\n                        onChange={this.handleInputChange}\n                    />\n                    <br/>\n                    <input\n                        name='email'\n                        type='email'\n                        placeholder='Email address'\n                        value={this.state.email}\n                        onChange={this.handleInputChange}\n                    />\n                    <br/>\n                    <input\n                        name='password'\n                        type='password'\n                        placeholder='Password'\n                        value={this.state.password}\n                        onChange={this.handleInputChange}\n                    />\n                    <br/>                    \n                    <button> Signup </button>\n                    {this.state.message && <div> {this.state.message} </div>}\n                </form>\n            </section>\n        )\n    }\n}\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst ProtectedRoute = ({ authorized, redirect, ...props }) => {\n  if (authorized) {\n    return <Route {...props} />;\n  } else {\n    return <Redirect to={redirect} />;\n  }\n};\n\nexport default ProtectedRoute;","import React, { Component } from 'react';\nimport AUTH_SERVICE from '../../services/AuthService';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\n\nexport default class Profile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            firstName: null,\n            lastName: null,\n            email: null,\n            editForm: false,\n            deleteUser: false,\n        }\n    }\n\n    componentDidMount = () => {\n        AUTH_SERVICE\n        .getAuthenticatedUser()\n        .then(responseFromServer => {\n            const { user } = responseFromServer.data;\n            this.props.onUserChange(user);\n            this.setState({\n                firstName: user.firstName,\n                lastName: user.lastName,\n                email: user.email\n            })\n        })\n        .catch(err => console.log({ err }));\n    }\n\n    editProfile = () => {\n        console.log('edit')\n        const { editForm } = this.state;\n        this.setState({ editForm: !editForm });\n    }\n\n    handleChange = (event) => {\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n    handleFormSubmit = () => {\n        const { firstName, lastName, email, editForm } = this.state;\n\n        AUTH_SERVICE\n        .updateCurrentUser({ firstName, lastName, email })\n        .then(responseFromServer => {\n            const { user } = responseFromServer.data;\n            this.props.onUserChange(user);\n            this.setState({ editForm: !editForm})\n        })\n        .catch(err => console.log({ err }));\n    }\n\n    deleteUser = () => {\n        const { deleteUser } = this.state;\n        this.setState({ deleteUser: !deleteUser});\n    }\n\n    // confirmDeleteUser = () => {\n    //     AUTH_SERVICE\n    //     .deleteUser()\n    //     .then(() => {\n\n    //     })\n    //     .catch(err => console.log({ err }));\n    // }\n\n\n\n    render() {\n        const { firstName, lastName, email, profileImg, teams, tasks } = this.props.currentUser;\n\n        return (\n            <div className='main-panel'>\n                {\n                    this.state.editForm\n                    ?<div className='profile-card'>\n                        <img src={profileImg} alt='user-img' />\n                        <div className='profile-card-info'>\n                            <div className='user-info'>\n                                <input name='firstName' value={this.state.firstName} onChange={this.handleChange} />\n                                <input name='lastName' value={this.state.lastName} onChange={this.handleChange} />\n                                <br />\n                                <input name='email' value={this.state.email} onChange={this.handleChange}/>\n                            </div>\n                        </div>\n                        <div className='edit-profile'>\n                            <button onClick={this.handleFormSubmit}>update</button>\n                        </div>\n                    </div>\n                    :<div className='profile-card'>\n                        <img src={profileImg} alt='user-img' />\n                        <div className='profile-card-info'>\n                            <div className='user-info'>\n                                <h3>{firstName} {lastName}</h3>\n                                <p>{email}</p>\n                            </div>\n                        </div>\n                        <div className='edit-profile'>\n                            <FontAwesomeIcon icon={faEdit} onClick={() => this.editProfile()} />\n                            <FontAwesomeIcon icon={faTimesCircle} onClick={() => this.deleteUser()} />\n                        </div>\n                    </div>                \n                }\n                <div className='user-stats'>\n                    <div>\n                        <h4>{teams.length}</h4>\n                        <h3>TEAMS</h3>\n                    </div>\n                    <div>\n                        <h4>{tasks.length}</h4>\n                        <h3>TASKS</h3>\n                    </div>\n                </div>\n                {\n                    this.state.deleteUser &&\n                    <div className='modal display'>\n                        <div className='modal-content delete-account'>\n                            <h4>Are you sure you want to delete your account</h4>\n                            <button onClick={this.confirmDeleteUser}>confirm</button>\n                            <div className='delete-account-cancel'>\n                                <FontAwesomeIcon icon={faTimesCircle} onClick={() => this.deleteUser()} />\n                            </div>\n                        </div>\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport AUTH_SERVICE from '../../../services/AuthService';\nimport { Link } from 'react-router-dom';\n\nexport default class Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            message: null\n        }\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n    handleFormSubmission = event => {\n        event.preventDefault();\n        const { email, password } = this.state;\n        console.log('logging in');\n        AUTH_SERVICE\n            .login({ email, password })\n            .then(responseFromServer => {\n                const { user } = responseFromServer.data;\n                console.log({loggedInUser: user});\n                // lift user up to App.js\n                this.props.onUserChange(user);\n                this.props.history.push('/home'); // redirect back to the home page\n            })\n            .catch(err => {\n                console.log(\"error logging in\")\n                if (err.response && err.response.data) {\n                    return this.setState({ message: err.response.data.message });\n                }\n            });\n    }\n\n    render() {\n        return (\n            <div className='landing'>\n                <div className='landing-content'>\n                    <div className='landing-nav'>\n                        <div>\n                            <Link to='/'>\n                                <p><b>do you even manage</b></p>\n                            </Link>\n                        </div>                       \n                    </div>\n                    <section className='center-content modal display'>\n                        <form className='form' onSubmit={this.handleFormSubmission}>\n                            <h3>Login</h3>\n                            <input\n                                name='email'\n                                type='email'\n                                placeholder='Email address'\n                                value={this.state.email}\n                                onChange={this.handleInputChange}\n                            />\n                            <br/>\n                            <input\n                                name='password'\n                                type='password'\n                                placeholder='Password'\n                                value={this.state.password}\n                                onChange={this.handleInputChange}\n                            />\n                            <br/>\n                            <button> Login </button>\n                        </form>\n                        {this.state.message && <div> {this.state.message} </div>}\n                    </section>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Signup from '../Authentication/Signup';\n\nexport default class Landing extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            signup: false\n        }\n    }\n\n    updateUser = (user) => {\n        this.props.onUserChange(user);\n    }\n\n    displayLoginModal = (event) => {}\n\n    displaySignupModal = () => {\n        const { signup } = this.state;\n        this.setState({ signup: !signup });\n    }\n\n    render() {\n        return (\n            <div className='landing'>\n                <div className='landing-content'>\n                    <div className='landing-nav'>\n                        <div>\n                            <Link to='/'>\n                                <p><b>do you even manage</b></p>\n                            </Link>\n                        </div>\n                        <div className='landing-nav-auth'>\n                            <Link to='/login'>\n                                <p className='login-btn' onClick={this.displayLoginModal}>Login</p>\n                            </Link>                            \n                            <button onClick={this.displaySignupModal}>Get Started</button>\n                        </div>                        \n                    </div>\n                    {\n                        this.state.signup\n                        ?<Signup onUserChange={this.updateUser}/>\n                        :<div>\n                            <h2>Project Management Tools</h2>\n                            <p>to help you stay on track</p>\n                            <div>\n                                <button onClick={this.displaySignupModal}>Get Started</button>\n                            </div>\n                        </div>                        \n                    }                    \n                    <div>\n                        <img src='https://www.ntaskmanager.com/wp-content/uploads/2019/07/3.png' alt=''/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import axios from 'axios';\n\nconst baseURL = process.env.REACT_APP_SERVER_POINT;\n\nconst service = axios.create({\n  baseURL,\n  withCredentials: true\n});\n\nconst TEAM_SERVICE = {\n  createTeam(teamData) {\n    return service.post('/api/teams', teamData);\n  },\n  getAllTeams() {\n    return service.get('/api/teams');\n  },\n  getUserTeams() {\n    return service.get('/api/user-teams');\n  },\n  getOneTeam(teamData) {\n    return service.get(`/api/teams/${teamData}`);\n  },\n  deleteTeam(teamData) {\n    return service.post(`/api/teams/${teamData}/delete`, {});\n  },\n  updateTeam(teamId, teamData) {\n    return service.post(`/api/teams/${teamId}/update`, teamData);\n  },\n  removeTeamMember(teamId, teamData) {\n    return service.post(`/api/teams/${teamId}/remove-member`, teamData);\n  }\n};\n\nexport default TEAM_SERVICE;","import axios from 'axios';\n\nconst baseURL = process.env.REACT_APP_SERVER_POINT;\n\nconst service = axios.create({\n  baseURL,\n  withCredentials: true\n});\n\nconst TASK_SERVICE = {\n  createTask(taskData) {\n    return service.post('/api/tasks', taskData);\n  },\n  getAllTasks() {\n    return service.get('/api/tasks');\n  },\n  getAllUserTasks() {\n    return service.get('/api/user-tasks');\n  },\n  getProjectTasks(projectId) {\n    return service.get(`/api/project-tasks/${projectId}`);\n  },\n  getOneTask(taskId) {\n    return service.get(`/api/tasks/${taskId}`);\n  },\n  deleteTask(taskId) {\n    return service.post(`/api/tasks/${taskId}/delete`);\n  },\n  updateTask(taskId, taskData) {\n    return service.post(`/api/tasks/${taskId}/update`, taskData);\n  }\n};\n\nexport default TASK_SERVICE;","import React, { Component } from 'react';\nimport AUTH_SERVICE from '../../services/AuthService';\nimport TEAM_SERVICE from '../../services/TeamService';\n\nexport default class TeamForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            owner: this.props.currentUser._id,\n            members: [],\n            usersList: null\n        }\n    }\n\n    componentDidMount = () => {\n        AUTH_SERVICE\n            .getAllUsers()\n            .then(responseFromServer => {\n                const { users } = responseFromServer.data;\n                // const usersWithoutCurrentUser = users.filter(user => user._id !== this.props.currentUser._id);\n                this.setState({ usersList: users});\n            })\n            .catch(err => console.log({ err }));\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n    handleFormSubmit = (event) => {\n        const { name, owner, members } = this.state;\n        const memberIDs = members.map(member => member._id);\n        const modalClasslist = event.target.parentNode.parentNode.classList;\n        const selector = event.target.parentNode.childNodes[1];\n\n        TEAM_SERVICE\n            .createTeam({ name, owner, members: memberIDs })\n            .then(teamFromServer => {\n                // const { team } = teamFromServer.data;\n                this.setState({ \n                    name: '',\n                    members: []\n                });\n\n                TEAM_SERVICE\n                    .getUserTeams()\n                    .then(responseFromServer => {\n                        const { teams } = responseFromServer.data;\n                        this.props.updateUserTeams(teams);\n                        modalClasslist.remove('display');\n                        selector.selectedIndex = 0;\n                    })\n                    .catch(err => console.log({ err }));\n            })\n            .catch(err => console.log({ err }));\n\n    }\n\n    addMember = (event) => {\n        // console.log({addMember: event.target.parentNode.childNodes[1]})\n        const { usersList, members } = this.state;\n        const selectedID = event.target.parentNode.childNodes[1].value;\n        const selectedUser = usersList.filter(user => user._id === selectedID)[0];\n        members.push(selectedUser);\n        this.setState({ members });\n    }\n\n    cancelForm = (event) => {\n        const modalClasslist = event.target.parentNode.parentNode.classList;\n        const selector = event.target.parentNode.childNodes[1];\n\n        modalClasslist.remove('display');\n        selector.selectedIndex = 0;\n        \n        this.setState({\n            name: '',\n            members: []\n        })\n    }\n\n    render() {\n        // console.log({users: this.state.usersList})\n        // console.log({members: this.state.members})\n        return (\n            <div className='modal'>\n                <div className='modal-content'>\n                    <input \n                        name='name' \n                        type='text'\n                        placeholder='team name'\n                        value={this.state.name}\n                        onChange={this.handleInputChange}/>\n\n                    <div>\n                        <label htmlFor=\"members\">Select members:</label>\n                        <select name=\"members\" id=\"members\">\n                            <option value={null}></option>\n                            {\n                                this.state.usersList?.map(user => \n                                <option key={`member${user._id}`} value={user._id} >{user.firstName} {user.lastName}</option>)\n                            }\n                        </select>\n                        <button onClick={(user) => this.addMember(user)}>add</button>\n                    </div>\n                    <div>\n                        {\n                            this.state.members?.map(member => \n                                <div>\n                                    <p>{member.firstName} {member.lastName}</p>\n                                </div>)\n                        }\n                    </div>\n                    \n                    <button onClick={this.cancelForm}> Cancel </button>\n                    <button onClick={this.handleFormSubmit}> Create a Team </button>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { NavLink, Link } from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCaretDown } from '@fortawesome/free-solid-svg-icons';\nimport { faTasks } from '@fortawesome/free-solid-svg-icons';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\nimport { faTh } from '@fortawesome/free-solid-svg-icons';\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport AUTH_SERVICE from '../../services/AuthService';\nimport TEAM_SERVICE from '../../services/TeamService';\nimport TASK_SERVICE from '../../services/TaskService';\nimport TeamForm from '../TeamForm';\n\nexport default class SideNav extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n    componentDidMount = () => {\n        Promise.all([\n            AUTH_SERVICE.getAuthenticatedUser(), \n            TEAM_SERVICE.getUserTeams(), \n            TASK_SERVICE.getAllUserTasks()])\n            .then(responseFromServer => {\n                const { user } = responseFromServer[0].data;\n                const { teams } = responseFromServer[1].data;\n                const { tasks } = responseFromServer[2].data;\n\n                this.props.onUserChange(user);\n                this.props.updateUserTeams(teams);\n                this.props.updateUserTasks(tasks);\n            })\n            .catch(err => console.log({ err }))\n    }\n\n    logoutAndLiftUserState = () => {\n        AUTH_SERVICE\n            .logout()\n            .then(() => {\n                // this.props.history.push('/');\n                this.props.onUserChange(null);\n            })\n            .catch(err => console.log({ err }));\n    }\n\n    itemIsActive = (event) => {\n        const listClassName = event.target.parentNode.children[2].classList;\n        // console.log({event: event.target.parentNode.children[2].classList});\n        if(listClassName.contains('show')) {\n            listClassName.remove('show');\n        } else {\n            listClassName.add('show')\n        }\n    }\n\n    createTeamForm = (event) => {\n        const modalClasslist = event.target.parentNode.parentNode.parentNode\n        .parentNode.parentNode.parentNode.childNodes[2].classList;\n        // console.log({ modalClasslist });\n        modalClasslist.contains('display')\n        ? modalClasslist.remove('display')\n        : modalClasslist.add('display')\n    }\n\n    render() {\n        // console.log('side nav team props', this.props.userTeams);\n        return (\n            <div className='sidenav'>\n                <div className=\"logo\">\n                    <Link to='/home'>\n                        <img src='/logo192.png' alt='app logo'/>\n                    </Link>\n                    <Link to='/home'>DO YOU EVEN MANAGE</Link>\n                </div>\n\n                <div className='sidenav-wrapper'>\n\n                    <div className=\"user\">\n                        <div className='user-info'>\n                            <button className='onClickBtn' onClick={this.itemIsActive}></button>\n                            <div className='user-info-block'>\n                                <div className='photo'>\n                                    <img src={this.props.currentUser?.profileImg} alt='profile img'/>\n                                </div>\n                                <span>{this.props.currentUser?.firstName}</span>\n                                <div className='caret'>\n                                    <FontAwesomeIcon icon={faCaretDown} />\n                                </div>\n                            </div>\n                            <ul className='collapse'>\n                                <li>\n                                    <NavLink exact activeClassName='current-nav' to={`/profile`}>\n                                        <button className='onClickBtn'></button>\n                                    </NavLink>\n                                    <div className='user-options'>\n                                        <FontAwesomeIcon icon={faUser} />\n                                        <div>PROFILE</div>\n                                    </div>                                        \n                                </li>\n                                <li>\n                                    <button className='onClickBtn' onClick={this.logoutAndLiftUserState}></button>\n                                    <div className='user-options'>\n                                        <FontAwesomeIcon icon={faSignOutAlt} />\n                                        <div>LOGOUT</div>\n                                    </div>\n                                </li>\n                            </ul>\n                        </div>                        \n                    </div>\n\n                    <ul className=\"nav\">\n                        <li className=''>\n                            <button className='onClickBtn' onClick={this.itemIsActive}></button>\n                            <div className='list-info'  >\n                                <div className='icon'>\n                                    <FontAwesomeIcon icon={faTh} />\n                                </div>\n                                <div>My Teams</div>\n                                <div className='caret'>\n                                    <FontAwesomeIcon icon={faCaretDown} />\n                                </div>\n                            </div>\n                            <ul className='collapse'>\n                                <li className='teams'>\n                                    <button className='onClickBtn' onClick={this.createTeamForm}></button>\n                                    <div className='teams-info'>\n                                        <FontAwesomeIcon icon={faPlusCircle} />\n                                        <div>Create a Team</div>\n                                    </div>\n                                </li>\n                                {\n                                    this.props.userTeams?.map(team =>                                    \n                                        <li key={team._id} className='teams'>\n                                            <NavLink exact activeClassName='current-nav' to={`/team/${team._id}`}>\n                                                <button className='onClickBtn'></button>\n                                            </NavLink>                                            \n                                            <div className='teams-info'>\n                                                <FontAwesomeIcon icon={faTh} />\n                                                <div>{team.name}</div>\n                                            </div>                                            \n                                        </li>                                    \n                                    )\n                                }\n                            </ul>\n                        </li>\n                        <li className=''>\n                            <NavLink exact activeClassName='current-nav' to='/my-tasks'>\n                                <button className='onClickBtn'></button>\n                            </NavLink>\n                            <div className='list-info' >\n                                <div className='icon'>\n                                    <FontAwesomeIcon icon={faTasks} />\n                                </div>\n                                <div className='list-info-title'>My Tasks</div>\n                                <div className='caret'>\n                                    <FontAwesomeIcon icon={faCaretDown} />\n                                </div>\n                            </div>\n                        </li>\n                    </ul>\n                </div>\n                <TeamForm \n                    currentUser={this.props.currentUser}\n                    updateUserTeams={this.props.updateUserTeams}/>\n            </div>\n        )\n    }\n}\n","import axios from 'axios';\n\nconst baseURL = process.env.REACT_APP_SERVER_POINT;\n\nconst service = axios.create({\n  baseURL,\n  withCredentials: true\n});\n\nconst PROJECT_SERVICE = {\n  createProject(projectData) {\n    return service.post('/api/projects', projectData);\n  },\n  getAllProjects() {\n    return service.get('/api/projects');\n  },\n  getTeamProjects(teamId) {\n    return service.get(`/api/team-projects/${teamId}`);\n  },\n  getOneProject(projectId) {\n    return service.get(`/api/projects/${projectId}`);\n  },\n  deleteProject(projectId) {\n    return service.post(`/api/projects/${projectId}/delete`);\n  },\n  updateProject(projectId, projectData) {\n    return service.post(`/api/projects/${projectId}/update`, projectData);\n  }\n};\n\nexport default PROJECT_SERVICE;","import React, { Component } from 'react';\n// import AUTH_SERVICE from '../../services/AuthService';\nimport TASK_SERVICE from '../../services/TaskService';\n// import TEAM_SERVICE from '../../services/TeamService';\n\n\nexport default class TaskDetails extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: '',\n            description: '',\n            dueDate: '',\n            assigned: '',\n            checklist: [],\n            status: '',\n            teamMembers: null\n        }\n    }\n\n    componentDidMount = () => {\n        const { \n            title, \n            description, \n            dueDate,\n            assigned,\n            checklist,\n            isComplete\n        } = this.props.task;\n\n        const date = new Date(dueDate);\n        const convertedDate = date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate();\n\n        this.setState({\n            title, \n            description, \n            dueDate: convertedDate,\n            assigned,\n            checklist,\n            isComplete\n        });        \n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n    handleCheckBoxInput = (event) => {\n        const index = event.target.parentNode.attributes.index.value;\n        const { checklist } = this.state;\n        checklist[index].isComplete = !checklist[index].isComplete;\n        // console.log({ checklist })\n        this.setState({ checklist });\n    }\n\n    handleFormSubmit = (event) => {\n        const modalClasslist = event.target.parentNode.parentNode.classList;\n        const assignedID = event.target.parentNode.childNodes[3].childNodes[1].value;\n        const selectedStatus = event.target.parentNode.childNodes[5].childNodes[1].value\n\n        console.log({ selectedStatus })\n        const { \n            title, \n            description,\n            dueDate,\n            checklist,\n         } = this.state;\n\n        //  console.log(modalClasslist)\n         console.log(assignedID)\n\n        TASK_SERVICE\n        .updateTask(\n            this.props.task._id,\n            {   title, \n                description, \n                dueDate: new Date(dueDate), \n                assigned: assignedID || this.state.assigned._id, \n                checklist, \n                status: selectedStatus\n            })\n        .then(responseFromServer => {\n            const { task } = responseFromServer.data;\n            // console.log({ task });\n            modalClasslist.remove('display');\n            this.props.updateProject();\n\n            // TEAM_SERVICE\n            // .getUserTeams()\n            // .then(responseFromServer => {\n            //     const { teams } = responseFromServer.data;\n            //     this.props.updateUserTeams(teams)\n            // })\n            // .catch(err => console.log({ err }));\n        })\n        .catch(err => console.log({ err }));\n    }\n\n    cancelForm = (event) => {\n        const modalClasslist = event.target.parentNode.parentNode.classList;\n        // console.log({cancelForm: modalClasslist});\n\n        modalClasslist.remove('display');\n    }\n\n    addItem = (event) => {\n        const { checklist } = this.state;\n        const input = event.target.parentNode.childNodes[1];\n        const checkItem = input.value.trim();\n        \n        const checklistItem = {\n            checkItem,\n            isComplete: false\n        }\n\n        checklist.push(checklistItem);\n\n        this.setState({ checklist });\n        input.value = '';\n    }\n\n    render() {\n        return (\n            <div className='modal'>\n                <div className='modal-content' onSubmit={this.handleFormSubmit}>\n                    <label>Title:\n                        <input \n                            name='title' \n                            type='text'\n                            placeholder='Task title'\n                            value={this.state.title}\n                            onChange={this.handleInputChange}/>\n                        </label>\n                    <label htmlFor='description'>Description:</label>\n                    <input \n                        name='description' \n                        type='text'\n                        placeholder='Task description'\n                        value={this.state.description}\n                        onChange={this.handleInputChange}/>\n                    <div>\n                        <label htmlFor=\"assigned\">Assigned</label>\n                        <select name=\"assigned\" id=\"assigned\">\n                            <option value={null}></option>\n                            {\n                                this.props.currentProject?.team.members?.map(member => \n                                <option key={`task${member._id}`} value={member._id} >{member.firstName} {member.lastName}</option>)\n                            }\n                        </select>\n                        <br/>\n                        <br/>\n                        <div>Currently assigned: {this.state.assigned.firstName}</div>\n                    </div>\n                    <div className='checklist'>\n                        <label></label>\n                        <input type='text' placeholder='checklist item' />\n                        <button onClick={this.addItem}>Add to do item</button>\n                        <ul>\n                            {\n                                this.state.checklist.map((item, index) => \n                                <li key={`checkItem${item.checkItem}`} index={index}>\n                                    <input \n                                        type='checkbox' \n                                        defaultChecked={item.isComplete}\n                                        onChange={this.handleCheckBoxInput}\n                                        />\n                                        {item.checkItem}\n                                </li>\n                                )\n                            }\n                        </ul>\n                    </div>\n                    <div>\n                        <label htmlFor=\"status\">Task status: </label>\n                        <select name=\"status\" id=\"status\">\n                            <option value='todo'>not started</option>\n                            <option value='inProgress'>In progress</option>\n                            <option value='complete'>completed</option>\n                        </select>\n                    </div>\n                    <input \n                        name='dueDate' \n                        type='date'\n                        placeholder='dueDate'\n                        value={this.state.dueDate}\n                        onChange={this.handleInputChange}/>\n                    <button onClick={this.cancelForm}> Cancel </button>\n                    <button onClick={this.handleFormSubmit}> Save task </button>\n                </div>                \n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\n// import AUTH_SERVICE from '../../services/AuthService';\nimport TASK_SERVICE from '../../services/TaskService';\n\nexport default class TaskForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: '',\n            description: '',\n            dueDate: '',\n            assigned: '',\n            checklist: [],\n            isComplete: false,\n            teamMembers: null\n        }\n    }\n\n    componentDidMount = () => {\n        \n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n    handleFormSubmit = (event) => {\n        const modalClasslist = event.target.parentNode.parentNode.classList;\n        const assignedID = event.target.parentNode.childNodes[2].childNodes[1].value;\n        const { \n            title, \n            description,\n            dueDate,\n            checklist,\n            isComplete\n         } = this.state;\n\n\n         console.log({taskProject: this.props.currentProject._id})\n\n        TASK_SERVICE\n            .createTask(\n                {   title, \n                    description, \n                    project: this.props.currentProject._id, \n                    dueDate: new Date(dueDate), \n                    assigned: assignedID, \n                    checklist, \n                    isComplete \n                })\n            .then(projectFromServer => {\n                const { task } = projectFromServer.data;\n                console.log({ task });\n                this.props.addNewTask(task);\n                // this.props.updateProject();\n                modalClasslist.remove('display');\n                this.setState({\n                    title: '',\n                    description: '',\n                    dueDate: '',\n                    assigned: '',\n                    checklist: [],\n                });\n            })\n            .catch(err => console.log({ err }));\n    }\n\n    cancelForm = (event) => {\n        const modalClasslist = event.target.parentNode.parentNode.classList;\n        // console.log({cancelForm: modalClasslist});\n\n        modalClasslist.remove('display');\n        \n        this.setState({\n            title: '',\n            description: '',\n            dueDate: '',\n            assigned: '',\n            checklist: [],\n        });\n    }\n\n    addItem = (event) => {\n        const { checklist } = this.state;\n        const input = event.target.parentNode.childNodes[0];\n        const checkItem = input.value.trim();\n\n        console.log({ checklist });\n        console.log({ input })\n        \n        const checklistItem = {\n            checkItem,\n            isComplete: false\n        }\n        console.log({ checklistItem })\n\n        checklist.push(checklistItem);\n\n        console.log({ checklist })\n\n        this.setState({ checklist });\n        input.value = '';\n    }\n\n    render() {\n        // console.log(\"team members\", this.props.currentProject?.team.members)\n        return (\n            <div className='modal'>\n                <div className='modal-content' onSubmit={this.handleFormSubmit}>\n                    <input \n                        name='title' \n                        type='text'\n                        placeholder='Task title'\n                        value={this.state.title}\n                        onChange={this.handleInputChange}/>\n                    <input \n                        name='description' \n                        type='text'\n                        placeholder='Task description'\n                        value={this.state.description}\n                        onChange={this.handleInputChange}/>\n                    <div>\n                        <label htmlFor=\"assigned\">Assign task:</label>\n                        <select name=\"assigned\" id=\"assigned\">\n                            <option value={null}></option>\n                            {\n                                this.props.currentProject?.team.members?.map(member => \n                                <option key={`task${member._id}`} value={member._id} >{member.firstName} {member.lastName}</option>)\n                            }\n                        </select>\n                    </div>\n                    <div>\n                        <input type='text' placeholder='checklist item' />\n                        <button onClick={this.addItem}>Add to do item</button>\n                        <ul>\n                            {\n                                this.state.checklist.map(item => \n                                <li key={`checkItem${item.checkItem}`}>{item.checkItem}</li>\n                                )\n                            }\n                        </ul>\n                    </div>\n                    <input \n                        name='dueDate' \n                        type='date'\n                        placeholder='dueDate'\n                        value={this.state.dueDate}\n                        onChange={this.handleInputChange}/>\n                    <button onClick={this.cancelForm}> Cancel </button>\n                    <button onClick={this.handleFormSubmit}> Create a new task </button>\n                </div>                \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport AUTH_SERVICE from '../../services/AuthService';\nimport PROJECT_SERVICE from '../../services/ProjectService';\nimport TaskDetails from '../TaskDetails.js';\n// import TASK_SERVICE from '../../services/TaskService';\nimport TaskForm from '../TaskForm';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\nimport TASK_SERVICE from '../../services/TaskService';\n\nexport default class ProjectDetails extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            project: null,\n            completedTasks: null,\n            toDoTasks: null,\n            inProgressTasks: null\n        }\n    }\n\n    componentDidMount = () => {\n        const { projectId } = this.props.match.params;\n        // console.log({ projectId })\n\n        Promise\n            .all([AUTH_SERVICE.getAuthenticatedUser(), PROJECT_SERVICE.getOneProject(projectId)])\n            .then(responseFromServer => {\n                const { user } = responseFromServer[0].data;\n                const { project } = responseFromServer[1].data;\n\n                // console.log({ project });\n                const toDoTasks = project.tasks.filter(task => task.status === 'todo');\n                const inProgressTasks = project.tasks.filter(task => task.status === 'inProgress');\n                const completedTasks = project.tasks.filter(task => task.status === 'complete');\n\n                this.props.onUserChange(user);\n                this.setState({ \n                    project,\n                    toDoTasks,\n                    inProgressTasks,\n                    completedTasks\n                 });\n            })\n            .catch(err => console.log({ err }));\n    }\n\n    addNewTask = (task) => {\n        // console.log('new task')\n        // const { project } = this.state;\n        // project.tasks.push(task);\n        // this.setState({ project });\n        this.componentDidMount();\n    }\n\n    displayTaskForm = (event) => {\n        // display task form modal\n        const modalClasslist = event.target.parentNode.parentNode.parentNode.parentNode.childNodes[1].classList;\n        // console.log({ modalClasslist });\n        modalClasslist.contains('display')\n        ? modalClasslist.remove('display')\n        : modalClasslist.add('display')\n    }\n\n    displayTask = (event) => {\n        const modalClasslist = event.target.parentNode.childNodes[2].classList;\n        modalClasslist.contains('display')\n        ? modalClasslist.remove('display')\n        : modalClasslist.add('display')\n    }\n\n    convertDate = (date) => {\n        const options = { year: 'numeric', month: 'long', day: 'numeric' };\n        return new Date(date).toLocaleDateString([],options);\n    }\n\n    updateUserTeams = (teams) => {\n        this.props.updateUserTeams(teams);\n        this.componentDidMount();\n    }\n\n    updateProject = () => {\n        this.componentDidMount();\n    }\n\n    deleteTask = (event) => {\n        const { tasks } = this.state.project;\n        const taskName = event.target.parentNode.parentNode.childNodes[1].innerText;\n        // console.log({ taskName });\n        const taskToDelete = tasks.filter(task => task.title === taskName)[0];\n\n        TASK_SERVICE\n        .deleteTask(taskToDelete._id)\n        .then(() => this.componentDidMount())\n        .catch(err => console.log({ err }));\n    }\n\n    render() {\n        // console.log(this.state?.project);\n        return (\n            <div className='flex-row'>\n                <div className='main-panel'>\n                    <div className='task-board'>\n                        <div className='task-board-header'>\n                            <h3>{this.state.project?.name}</h3>\n                            <button onClick={this.displayTaskForm}>Add new Task</button>\n                        </div>\n                        <div className='task-board-body'>\n                            <div className='col'>\n                                <div className='col-header'>\n                                    <h5>ToDo</h5>\n                                </div>\n                                <div className='col-body'>\n                                    {/* list of items */}\n                                    {\n                                        this.state.toDoTasks?.map(task => \n                                        <div className='task-card' key={`todo${task._id}`} task={task._id}>\n                                            <button onClick={this.displayTask}></button>\n                                            <p>{task.title}</p>\n                                            <TaskDetails \n                                                currentProject={this.state.project} \n                                                updateUserTeams={this.updateUserTeams} \n                                                updateProject={this.updateProject}\n                                                task={task}/>\n                                            <div className='delete-btn'>\n                                                <FontAwesomeIcon icon={faTimesCircle} onClick={this.deleteTask} />\n                                            </div>\n                                        </div>\n                                        )\n                                    }\n                                </div>\n                            </div>\n                            <div className='col'>\n                                <div className='col-header'>\n                                    <h5>In Progress</h5>\n                                </div>\n                                <div className='col-body'>\n                                    {/* list of items */}\n                                    {\n                                        this.state.inProgressTasks?.map(task => \n                                        <div className='task-card' key={`progess${task._id}`} task={task._id}>\n                                            <button onClick={this.displayTask}></button>\n                                            <p>{task.title}</p>\n                                            <TaskDetails \n                                                currentProject={this.state.project} \n                                                updateUserTeams={this.updateUserTeams} \n                                                updateProject={this.updateProject}\n                                                task={task}/>\n                                            <div className='delete-btn'>\n                                                <FontAwesomeIcon icon={faTimesCircle} onClick={this.deleteTask} />\n                                            </div>\n                                        </div>\n                                        )\n                                    }\n                                </div>\n                            </div>\n                            <div className='col'>\n                                <div className='col-header'>\n                                    <h5>Completed</h5>\n                                </div>\n                                <div className='col-body'>\n                                    {/* list of items */}\n                                    {\n                                        this.state.completedTasks?.map(task => \n                                        <div className='task-card' key={`complete${task._id}`}>\n                                            <button onClick={this.displayTask}></button>\n                                            <p>{task.title}</p>\n                                            <TaskDetails \n                                                currentProject={this.state.project} \n                                                updateUserTeams={this.updateUserTeams} \n                                                updateProject={this.updateProject}\n                                                task={task}/>\n                                            <div className='delete-btn'>\n                                                <FontAwesomeIcon icon={faTimesCircle} onClick={this.deleteTask} />\n                                            </div>\n                                        </div>\n                                        )\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    \n                </div>\n                <TaskForm\n                    addNewTask={this.addNewTask}\n                    currentUser={this.props.currentUser}\n                    currentProject={this.state.project}/>\n                \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSortDown } from '@fortawesome/free-solid-svg-icons';\nimport { faSortUp } from '@fortawesome/free-solid-svg-icons';\n\nexport default class MyTaskTable extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedTask: null,\n            sortedTasks: null,\n            newTask: false\n        }\n    }\n\n    convertDate = (date) => {\n        const options = { year: 'numeric', month: 'long', day: 'numeric' };\n        return new Date(date).toLocaleDateString([],options);\n    }\n\n    toggleForm = () => {\n        const { newTask } = this.state;\n        this.setState({ newTask: !newTask });\n    }\n\n    sortByDate = () => {\n        this.props.sortByDate();\n    }\n\n    render() {\n        const { ascendingDate } = this.props;\n        return (\n            <div className='my-tasks'>\n                <table className='my-tasks-table'>\n                    <thead>\n                        <tr>\n                            <th>\n                                <p>Task Title</p>\n                            </th>\n                            <th>\n                                <p>Project</p>\n                            </th>\n                            <th>\n                                <p>Team</p>\n                            </th>\n                            <th>\n                                <div className='table-head'>\n                                    <p onClick={this.sortByDate}>Due</p>\n                                    {\n                                        ascendingDate\n                                        ?<FontAwesomeIcon icon={faSortUp} />\n                                        :<FontAwesomeIcon icon={faSortDown} />\n                                    }                                    \n                                </div>\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            this.props.userTasks?.map(task =>\n                                <tr key={`userTask${task._id}`}>\n                                    <td>{task.title}</td>\n                                    <td>{task.project?.name}</td>\n                                    <td>{task.project?.team.name}</td>\n                                    <td>{this.convertDate(task.dueDate)}</td>\n                                </tr>\n                            )\n                        }                        \n                        <tr></tr>\n                    </tbody>\n                </table>\n                \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport AUTH_SERVICE from '../../services/AuthService';\nimport TASK_SERVICE from '../../services/TaskService';\nimport MyTaskTable from './MyTaskTable';\n\nexport default class MyTasks extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tasks: null,\n            sortedTasks: null,\n            ascendingDate: false\n        }\n    }\n\n    componentDidMount = () => {\n        Promise\n            .all([AUTH_SERVICE.getAuthenticatedUser(), TASK_SERVICE.getAllUserTasks()])\n            .then(responseFromServer => {\n                const { user } = responseFromServer[0].data;\n                const { tasks } = responseFromServer[1].data;\n                // console.log({ tasks });\n                this.props.onUserChange(user);\n                tasks.forEach(task => { task.dueDate = new Date(task.dueDate) });\n                tasks.sort((a, b) => a.dueDate - b.dueDate);\n                this.setState({ \n                    tasks, \n                    sortedTasks: tasks \n                });\n            })\n            .catch(err => console.log({ err }));\n    }\n\n    sortByDate = () => {\n        const { tasks, ascendingDate } = this.state;\n\n        ascendingDate\n        ? tasks.sort((a, b) => a.dueDate - b.dueDate)\n        : tasks.sort((a, b) => b.dueDate - a.dueDate)\n        \n        // console.log('sorted tasks', tasks);\n        this.setState({ \n            sortedTasks: tasks,\n            ascendingDate: !ascendingDate\n        })\n    }\n\n    render() {\n        return (\n            <div className='main-panel'>\n                <MyTaskTable \n                    userTasks={this.state.sortedTasks} \n                    ascendingDate={this.state.ascendingDate} \n                    sortByDate={this.sortByDate}/>\n            </div>\n        )\n    }\n}\n","import React from 'react'\n\nexport default function MemberCard({ members }) {\n\n    return (\n        <div className='member-card'>\n            <div className=\"member-card-header\">\n                <h5>Team Members</h5>\n            </div>\n            <div className=\"member-card-body\">\n                {\n                    members?.map(member => \n                        <div key={`team-member${member._id}`}>\n                            <img src={member.profileImg} alt=''/>\n                            <h4>{member.firstName} {member.lastName}</h4>\n                        </div>)\n                }                \n            </div>            \n        </div>\n    )\n}\n","import React, { Component } from 'react';\nimport AUTH_SERVICE from '../../services/AuthService';\nimport TEAM_SERVICE from '../../services/TeamService';\n\nexport default class EditForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            teamId: '',\n            name: '',\n            members: null,\n            projects: null,\n            usersList: null\n        }\n    }\n\n    componentDidMount = () => {\n        const { _id, name, members, projects } = this.props?.team;\n        console.log({props: this.props});\n        AUTH_SERVICE\n            .getAllUsers()\n            .then(responseFromServer => {\n                const { users } = responseFromServer.data;\n                this.setState({ \n                    usersList: users,\n                    teamId: _id,\n                    name,\n                    members,\n                    projects\n\n                });\n            })\n            .catch(err => console.log({ err }));\n    }\n\n    componentDidUpdate = () => {\n        if (this.props.team._id !== this.state.teamId) {\n            this.componentDidMount();\n        }\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n    handleFormSubmit = (event) => {\n        const { name, members, projects } = this.state;\n        const memberIDs = members.map(member => member._id);\n        const projectIDs = projects.map(projects => projects._id);\n        const modalClasslist = event.target.parentNode.parentNode.classList;\n\n        console.log(name, memberIDs);\n        console.log({ modalClasslist })\n\n        TEAM_SERVICE\n            .updateTeam(this.props.team._id, { \n                name, \n                members: memberIDs.length === 0 ? this.props.currentUser._id : memberIDs, \n                projects: projectIDs \n            })\n            .then(teamFromServer => {\n                const { team } = teamFromServer.data;\n                console.log({ newTeamData: team })\n\n                TEAM_SERVICE\n                    .getUserTeams()\n                    .then(responseFromServer => {\n                        const { teams } = responseFromServer.data;\n                        this.props.updateUserTeams(teams);\n                        this.props.TeamEditForm();\n                    })\n                    .catch(err => console.log({ err }));\n            })\n            .catch(err => console.log({ err }));\n\n    }\n\n    addMember = (event) => {\n        const { usersList, members } = this.state;\n        const selectedID = event.target.parentNode.childNodes[1].value;\n        const selectedUser = usersList.filter(user => user._id === selectedID)[0];\n        members.push(selectedUser);\n        this.setState({ members });\n    }\n\n    removeMember = (event) => {\n        let { members } = this.state;\n        const memberToRemove = event.target.parentNode.attributes.member.nodeValue;\n        members = members.filter(member => member._id !== memberToRemove);\n        this.setState({ members });\n        // const memberToRemove = event.target.parentNode.attributes.member.nodeValue\n        // console.log({ members })\n    }\n\n    cancelForm = (event) => {\n        this.props.TeamEditForm();\n    }\n\n    render() {\n        console.log({editState: this.state});\n        return (\n            <div className='modal display'>\n                <div className='modal-content'>\n                    <input \n                        name='name' \n                        type='text'\n                        placeholder='team name'\n                        value={this.state.name}\n                        onChange={this.handleInputChange}/>\n\n                    <div>\n                        <label htmlFor=\"members\">Select members:</label>\n                        <select name=\"members\" id=\"members\">\n                            <option value={null}></option>\n                            {\n                                this.state.usersList?.map(user => \n                                <option key={`member${user._id}`} value={user._id} >{user.firstName} {user.lastName}</option>)\n                            }\n                        </select>\n                        <button onClick={(user) => this.addMember(user)}>add</button><br/>\n                    </div>\n                    <div>\n                        {\n                            this.state.members?.map(member => \n                                <div className='member-list' key={`edit${member._id}`} member={member._id}>\n                                    <p>{member.firstName} {member.lastName}</p>\n                                    <button onClick={this.removeMember}>X</button>\n                                </div>)\n                        }\n                    </div>\n                    \n                    <button onClick={this.cancelForm}> Cancel </button>\n                    <br/>\n                    <button onClick={this.handleFormSubmit}> Edit Team </button>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PROJECT_SERVICE from '../../services/ProjectService';\nimport TEAM_SERVICE from '../../services/TeamService';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\n\nexport default class TeamProjects extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            description: '',\n            newProject: false\n        }\n    }\n\n    deleteProject = (projectId) => {\n        PROJECT_SERVICE\n            .deleteProject(projectId)\n            .then(() => {\n                TEAM_SERVICE\n                    .getUserTeams()\n                    .then(responseFromServer => {\n                        const { teams } = responseFromServer.data;\n                        this.props.updateUserTeams(teams);\n                    })\n                    .catch(err => console.log({ err }));\n            })\n            .catch(err => console.log({ err }));\n    }\n\n    toggleForm = () => {\n        const {newProject} = this.state;\n        this.setState({ newProject: !newProject});\n        this.setState({\n            name: '',\n            description: '',\n        })\n    }\n\n    handleChange = (event) => {\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n    handleFormSubmit = () => {\n        const { name, description } = this.state;\n        const teamId = this.props.team._id;\n\n        PROJECT_SERVICE\n        .createProject({ name, description, team: teamId })\n        .then(projectFromServer => {\n            console.log({ projectFromServer });\n\n            TEAM_SERVICE\n            .getUserTeams()\n            .then(responseFromServer => {\n                const { teams } = responseFromServer.data;\n                this.props.updateUserTeams(teams);\n                this.setState({ newProject: false});\n            })\n            .catch(err => console.log({ err }));\n        })\n        .catch(err => console.log({ err }));\n    }\n\n    render() {\n        return (\n            <div className='team-projects'>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Project name</th>\n                            <th>Description</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            this.props.projects?.map(project =>\n                            <tr key={project._id}>\n                                <td>{project.name}</td>\n                                <td>{project.description}</td>\n                                <td>\n                                    <span> </span>\n                                    <Link to={`/project/${project._id}`}><FontAwesomeIcon icon={faEye} /></Link>\n                                    <span> </span>\n                                    <FontAwesomeIcon className='delete-btn' icon={faTimesCircle} onClick={() => this.deleteProject(project._id)} />\n                                </td>\n                            </tr>\n                            )\n                        }                        \n                        {\n                            this.state.newProject &&\n                            <tr>\n                                <td >\n                                    <input \n                                    name='name'\n                                    placeholder='project name'\n                                    value={this.state.name}\n                                    onChange={this.handleChange} />\n                                </td>\n                                <td>\n                                <input \n                                    name='description'\n                                    placeholder='project description'\n                                    value={this.state.description}\n                                    onChange={this.handleChange} />\n                                </td>\n                                <td>\n                                    <button onClick={this.toggleForm}>cancel</button>\n                                    <button onClick={this.handleFormSubmit}>create</button>\n                                </td>\n                            </tr>\n                        }\n                        <tr className='new-project' onClick={this.toggleForm}>\n                            <td><FontAwesomeIcon icon={faPlusCircle} /></td>\n                            <td>Add a new Project</td>\n                            <td></td>\n                        </tr>\n                    </tbody>\n                </table>                \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport AUTH_SERVICE from '../../services/AuthService';\nimport TEAM_SERVICE from '../../services/TeamService';\nimport MemberCard from '../MemberCard';\nimport EditForm from '../TeamForm/EditForm';\nimport TeamProjects from './TeamProjects';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\n\nexport default class TeamDetails extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            team: null,\n            editForm: false\n        }\n    }\n\n    componentDidMount = () => {\n        const { teamId } = this.props.match.params;\n        Promise\n        .all([AUTH_SERVICE.getAuthenticatedUser(), TEAM_SERVICE.getOneTeam(teamId)])\n        .then(responseFromServer => {\n            const { user } = responseFromServer[0].data;\n            const { team } = responseFromServer[1].data;\n            this.setState({ team });\n            this.props.onUserChange(user);\n            // console.log({ team })\n        })\n        .catch(err => console.log({ err }));\n    }\n\n    componentDidUpdate = () => {\n        const { teamId } = this.props.match.params;\n        const { team } = this.state;\n        if (teamId !== team?._id) this.componentDidMount();\n    }\n\n    updateUserTeams = (teams) => {\n        this.props.updateUserTeams(teams);\n        this.componentDidMount();\n    }\n\n    TeamEditForm = (event) => {\n        console.log('edit team form')\n        const { editForm } = this.state;\n        this.setState({ editForm: !editForm });\n        // // console.log(event.target.parentNode.parentNode.parentNode.childNodes)\n        // const modalClassList = event.target.parentNode.parentNode.parentNode.parentNode.childNodes[2].classList;\n\n        // console.log(modalClassList);\n        // modalClassList.contains('display')\n        // ? modalClassList.remove('display')\n        // : modalClassList.add('display');\n    }\n\n    deleteTeam = () => {\n        TEAM_SERVICE\n        .deleteTeam(this.state.team._id)\n        .then(() => {\n            TEAM_SERVICE\n            .getUserTeams()\n            .then(responseFromServer => {\n                const { teams } = responseFromServer.data;\n                this.props.updateUserTeams(teams);\n                this.props.history.push('/home');\n            })\n            .catch(err => console.log({ err }));\n        })\n        .catch(err => console.log({ err }));\n    }\n\n    updateTeamDetails = (team) => {\n        this.setState({ team });\n    }\n\n    render() {\n        // console.log({state: this.state});\n        return (\n            <div className='main-panel'>\n                {\n                    this.state.team \n                    ?<div className='team-title'>\n                        <h1>{this.state.team?.name}</h1>\n                        <div className='team-title-btn'>\n                            <FontAwesomeIcon style={{background: 'white'}} icon={faEdit} onClick={() => this.TeamEditForm()} />\n                            <FontAwesomeIcon style={{background: 'white'}} icon={faTimesCircle} onClick={this.deleteTeam} />\n                        </div>\n                    </div>                    \n                    :<p>Loading...</p>                    \n                }\n                <div className='team-content'>\n                    <MemberCard members={this.state.team?.members}/>  \n                    {this.state.team && \n                        <TeamProjects \n                            updateUserTeams={this.updateUserTeams}\n                            team={this.state.team}\n                            projects={this.state.team.projects}/>\n                    }\n                </div>\n                {this.state.editForm &&\n                    <EditForm \n                        team={this.state.team}\n                        currentUser={this.props?.currentUser}\n                        updateUserTeams={this.updateUserTeams}\n                        updateTeamDetails={this.updateTeamDetails}\n                        TeamEditForm={this.TeamEditForm}\n                        />\n                }\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\n\nexport default function Loading() {\n    return (\n        <div className='loading-logo'>\n            <div className='loading-lol-spin'>\n                <FontAwesomeIcon icon={faSpinner} />\n            </div>            \n        </div>\n    )\n}\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport AUTH_SERVICE from './services/AuthService';\nimport Home from './components/Home';\nimport Signup from './components/Authentication/Signup';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport Profile from './components/Profile';\nimport Login from './components/Authentication/Login';\nimport Landing from './components/LandingPage';\nimport SideNav from './components/SideNav';\nimport ProjectDetails from './components/ProjectDetails';\nimport MyTasks from './components/MyTasks';\nimport TeamDetails from './components/TeamDetails';\nimport Loading from './components/Loading'\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state ={\n      currentUser: null,\n      userTeams: [],\n      userTasks: [],\n      currentTeam: null,\n      currentTeamProjects: null,\n      currentProject: null,\n      currentProjectTasks: null,\n      loading: true,\n    }\n  }\n\n  componentDidMount = () => {\n    this.getCurrentUser()\n  }\n\n  getCurrentUser = () => {\n    AUTH_SERVICE\n      .getAuthenticatedUser()\n      .then(responseFromServer => {\n        const { user } = responseFromServer.data;\n        // console.log({user});\n        this.setState({ currentUser: user, loading: false });\n      })\n      .catch(err => {\n        // console.log('auth error');\n        this.setState({ currentUser: null, loading: false });\n      });\n  }\n\n  updateUser = (user) => {    \n    this.setState({ currentUser: user });    \n  }\n\n  updateUserTeams = (teams) => {\n    this.setState({ userTeams: teams })\n  }\n\n  updateCurrentProject = (project) => {\n    this.setState({ currentProject: project })\n  }\n\n  updateUserTasks = (tasks) => {\n    this.setState({ userTasks: tasks })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n\n        <BrowserRouter>\n          {\n            this.state.currentUser &&\n            <SideNav \n              currentUser={this.state.currentUser}\n              userTeams={this.state.userTeams}\n              userProjects={this.state.userProjects}\n              userTasks={this.state.userTasks}\n              onUserChange={this.updateUser}\n              updateUserTeams={this.updateUserTeams}\n              updateUserTasks={this.updateUserTasks}\n              />\n          }\n\n          <Switch>\n            {\n              this.state.loading &&\n              (\n                <Route path='/' render={() =><Loading />} />\n              )\n            }\n              <Route \n                exact path='/' \n                render={props => \n                <Landing {...props} \n                  currentUser={this.state.currentUser} \n                  onUserChange={this.updateUser}/>} \n              />\n\n              <Route \n                exact path='/signup' \n                render={props => \n                <Signup {...props} \n                  currentUser={this.state.currentUser} \n                  onUserChange={this.updateUser} />}\n              />\n\n              <Route \n                exact path='/login' \n                render={props => \n                <Login {...props} \n                  currentUser={this.state.currentUser} \n                  onUserChange={this.updateUser} />}\n              />\n            \n            <ProtectedRoute\n              path='/project/:projectId'\n              authorized={this.state.currentUser}\n              redirect={'/login'}\n              render={props => \n                <ProjectDetails {...props} \n                  currentUser={this.state.currentUser} \n                  onUserChange={this.updateUser}\n                  updateUserTeams={this.updateUserTeams}\n                  updateCurrentProject={this.updateCurrentProject}\n                  currentProject={this.state.currentProject}\n                  />}/>\n\n            <ProtectedRoute\n              path='/my-tasks'\n              authorized={this.state.currentUser}\n              redirect={'/login'}\n              render={props => \n                <MyTasks {...props} \n                  currentUser={this.state.currentUser} \n                  onUserChange={this.updateUser}\n                  />}/>\n\n            <ProtectedRoute\n              path='/team/:teamId'\n              authorized={this.state.currentUser}\n              redirect={'/login'}\n              render={props =>\n                    <TeamDetails {...props} \n                      currentUser={this.state.currentUser}\n                      onUserChange={this.updateUser}\n                      updateUserTeams={this.updateUserTeams}\n                      />}/>\n\n            <ProtectedRoute\n              path='/profile'\n              authorized={this.state.currentUser}\n              redirect={'/login'}\n              render={props => \n                <Profile {...props} \n                  currentUser={this.state.currentUser}\n                  onUserChange={this.updateUser} \n                  updateCurrentTeam={this.updateCurrentTeam}\n                  userTeams={this.state.userTeams}\n                />}/>\n\n            <ProtectedRoute\n              path='/home'\n              authorized={this.state.currentUser}\n              redirect={'/login'}\n              render={props => \n                <Home {...props} \n                  currentUser={this.state.currentUser}\n                  onUserChange={this.updateUser} \n                  currentTeam={this.state.currentTeam}\n                  currentProject={this.state.currentProject}\n                  updateUserTeams={this.updateUserTeams}\n                />}/>\n          </Switch>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}